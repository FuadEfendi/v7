# This section identifies all the packages which may contain views.  The most efficient use is to identify 
# only the root package(s) here, and qualify with sub-packages in the map section
# syntax is like this:  uk.co.q3c.app.views
[viewPackages]
uk.co.q3c.v7.base.view
uk.co.q3c.v7.demo.view

[options]
# The fully qualified name of the enum class to use for label keys
labelKeys=uk.co.q3c.v7.demo.i18N.DemoLabelKeys

# if true, 'View' is appended to all view names in the tree - just makes things a it more readable
appendView=false

[standardPages]
publicHome=public/home
secureHome=secure/home
login=public/login
logout=public/logout
resetAccount=public/reset-account
unlockAccount=public/unlock-account
refreshAccount=public/refresh-account
requestAccount=public/request-account
enableAccount=public/enable-account

[map]
# This section is the site map
# prefix view with ':'
# prefix label key with '~'
# structure of map entry is:
# indentation, url segment, then view and label key can be either way round
# indentation: the number of '-' represents tree indentation.  A single '-' is the highest level.
# base url: a page without a name (in other words the base url) is specified like this   -:   HomeView  ~ home
# if view not specified it is capitalised version of url segment (for url segment 'home' view is Home or HomeView depending on value of 'appendView')
# if label key is not specified, the url segment is used as it is
# example:  --secure :SecureHome ~home
# arbitrary spaces can be used, they are stripped out before processing

-               : PublicHomeView              ~ home
-public         : PublicHomeView              ~ home
--home          : PublicHomeView              ~ home
--view2         : View2 
            
-secure         : SecureHomeView              ~ home
--home          : SecureHomeView              ~ home
--view1         : View1


	
