# This section identifies all the packages which may contain views.  The most efficient use is to identify 
# only the root package(s) here, and qualify with sub-packages in the map section
# syntax is like this:  uk.co.q3c.app.views
[viewPackages]
fixture.testviews2
uk.co.q3c.v7.base.view.testviews

[option]
# The fully qualified name of the enum class to use for label keys
labelKeys=uk.co.q3c.v7.i18n.TestLabelKeys

# if true, 'View' is appended to all view names in the tree - just makes things a it more readable
appendView=true


[map]
# This section is the site map
# prefix view with ':'
# prefix label key with '~'
# structure of map entry is:
# indentation, url segment, then view and label key can be either way round
# indentation: the number of '-' represents tree indentation.  A single '-' is the highest level.
# base url: a page without a name (in other words the base url) is specified like this   -:   HomeView  ~ home
# if view not specified it is capitalised version of url segment (for url segment 'home' view is Home or HomeView depending on value of 'appendView')
# if label key is not specified, the url segment is used as it is
# example:  --secure :SecureHome ~home
# arbitrary whitespace can be used, it is stripped out before processing

-:       PublicHome                        ~ home
-public:PublicHome                        ~ home
--login
-secure         : SecureHome              ~ home
--transfers     : subview.Transfer
--money-in-out  : subview.MoneyInOut      ~ moneyInOut
--options                                 ~ opt
